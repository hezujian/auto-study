name: Build and Package

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]
  workflow_dispatch:
    inputs:
      build-type:
        description: 'Build type'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - test
      node-version:
        description: 'Node.js version'
        required: true
        default: '16.x'
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
        node-version: [ 16.x ]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-warnings

      - name: Build application
        run: npm run build
        continue-on-error: true

      - name: Install packaging tool
        run: npm install -g pkg

      - name: Package for Windows
        if: matrix.os == 'windows-latest'
        run: |
          pkg . --targets node16-win-x64 -o auto-wangda-win-x64.exe
          powershell -Command "Get-FileHash .\auto-wangda-win-x64.exe | Format-List"

      - name: Package for macOS
        if: matrix.os == 'macos-latest'
        run: |
          pkg . --targets node16-macos-x64 -o auto-wangda-macos-x64
          pkg . --targets node16-macos-arm64 -o auto-wangda-macos-arm64
          chmod +x auto-wangda-macos-*
          file auto-wangda-macos-*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: auto-wangda-${{ matrix.os }}
          path: |
            auto-wangda-*
          retention-days: 30